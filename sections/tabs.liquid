{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'section-tabs.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<section class="tabs-section color-{{ section.settings.section_color_scheme }} gradient">
  <div class="tabs-section__wrapper section-{{ section.id }}-padding">
    <div class="page-width">
      {%- if section.settings.heading != blank -%}
        <div class="title-wrapper title-wrapper--no-top-margin center">
          <h2 class="title {{ section.settings.heading_size }}">{{ section.settings.heading | escape }}</h2>
        </div>
      {%- endif -%}

      {%- if section.blocks.size > 0 -%}
        <div class="tabs-navigation">
          {%- for block in section.blocks -%}
            {%- if block.settings.tab_name != blank -%}
              <button
                class="tab-button {% if forloop.first %}tab-button--active{% endif %}"
                data-tab-index="{{ forloop.index0 }}"
                data-slider-id="Slider-{{ section.id }}"
              >
                {{ block.settings.tab_name | escape }}
              </button>
            {%- endif -%}
          {%- endfor -%}
        </div>
      {%- endif -%}

      <slider-component class="tabs-slider" data-autoplay="false">
        <ul
          id="Slider-{{ section.id }}"
          class="tabs-slider__list slider slider--everywhere"
          role="list"
          aria-label="{{ 'general.slider.name' | t }}"
        >
          {%- for block in section.blocks -%}
            <li
              id="Slide-{{ section.id }}-{{ forloop.index }}"
              class="tabs-slider__item slider__slide"
              {{ block.shopify_attributes }}
            >
              <div class="tab-content">
                {%- if block.settings.image != blank -%}
                  <div class="tab-content__media global-media-settings">
                    {%- capture sizes -%}
                      (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
                      (min-width: 990px) calc((100vw - 130px) / 2),
                      (min-width: 750px) calc((100vw - 100px) / 2),
                      calc(100vw - 30px)
                    {%- endcapture -%}
                    {{
                      block.settings.image
                      | image_url: width: 1500
                      | image_tag: loading: 'lazy', sizes: sizes, widths: '165, 360, 535, 750, 1070, 1500'
                    }}
                  </div>
                {%- endif -%}

                <div class="tab-content__text">
                  {%- if block.settings.title != blank -%}
                    <h3 class="tab-content__title h2">{{ block.settings.title | escape }}</h3>
                  {%- endif -%}

                  {%- if block.settings.text != blank -%}
                    <div class="tab-content__description rte">{{ block.settings.text }}</div>
                  {%- endif -%}

                  {%- if block.settings.button_label != blank -%}
                    <a
                      {% if block.settings.button_link != blank %}
                        href="{{ block.settings.button_link }}"
                      {% endif %}
                      class="button button--{{ section.settings.button_style }}"
                    >
                      {{ block.settings.button_label | escape }}
                    </a>
                  {%- endif -%}
                </div>
              </div>
            </li>
          {%- endfor -%}
        </ul>

        {%- if section.blocks.size > 1 -%}
          <div class="slider-buttons no-js-hidden">
            <button
              type="button"
              class="slider-button slider-button--prev"
              name="previous"
              aria-label="{{ 'general.slider.previous_slide' | t }}"
              aria-controls="Slider-{{ section.id }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </button>
            <button
              type="button"
              class="slider-button slider-button--next"
              name="next"
              aria-label="{{ 'general.slider.next_slide' | t }}"
              aria-controls="Slider-{{ section.id }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>
        {%- endif -%}
      </slider-component>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const sliderComponent = document.querySelector('slider-component');
    
    tabButtons.forEach((button, index) => {
      button.addEventListener('click', function() {
        const sliderId = this.dataset.sliderId;
        const tabIndex = parseInt(this.dataset.tabIndex);
        const slider = document.getElementById(sliderId);
        
        if (slider && sliderComponent) {
          // Remove active class from all buttons
          tabButtons.forEach(btn => btn.classList.remove('tab-button--active'));
          // Add active class to clicked button
          this.classList.add('tab-button--active');
          
          // Navigate to the corresponding slide
          const slideWidth = slider.querySelector('.slider__slide').offsetWidth;
          const gap = parseFloat(window.getComputedStyle(slider).gap) || 0;
          const scrollPosition = tabIndex * (slideWidth + gap);
          
          slider.scrollTo({
            left: scrollPosition,
            behavior: 'smooth'
          });
        }
      });
    });
    
    // Update active tab based on scroll position
    const slider = document.querySelector('.tabs-slider__list');
    if (slider) {
      slider.addEventListener('scroll', function() {
        const slideWidth = slider.querySelector('.slider__slide').offsetWidth;
        const gap = parseFloat(window.getComputedStyle(slider).gap) || 0;
        const currentIndex = Math.round(slider.scrollLeft / (slideWidth + gap));
        
        tabButtons.forEach((button, index) => {
          if (index === currentIndex) {
            button.classList.add('tab-button--active');
          } else {
            button.classList.remove('tab-button--active');
          }
        });
      });
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.tabs.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.tabs.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "button_style",
      "options": [
        {
          "value": "primary",
          "label": "t:sections.multirow.settings.button_style.options__1.label"
        },
        {
          "value": "secondary",
          "label": "t:sections.multirow.settings.button_style.options__2.label"
        }
      ],
      "default": "secondary",
      "label": "t:sections.multirow.settings.button_style.label"
    },
    {
      "type": "color_scheme",
      "id": "section_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "t:sections.tabs.blocks.tab.name",
      "settings": [
        {
          "type": "text",
          "id": "tab_name",
          "label": "t:sections.tabs.blocks.tab.settings.tab_name.label"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.tabs.blocks.tab.settings.image.label"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Tab title",
          "label": "t:sections.tabs.blocks.tab.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store.</p>",
          "label": "t:sections.tabs.blocks.tab.settings.text.label"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "t:sections.tabs.blocks.tab.settings.button_label.label",
          "info": "t:sections.tabs.blocks.tab.settings.button_label.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.tabs.blocks.tab.settings.button_link.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.tabs.presets.name",
      "blocks": [
        {
          "type": "tab"
        },
        {
          "type": "tab"
        }
      ]
    }
  ]
}
{% endschema %}
